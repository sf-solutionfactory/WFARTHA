@model IEnumerable<WFARTHA.Entities.DOCUMENTO>
@using System.Web.Hosting;
@using System.Linq;
@{
    //ViewBag.Title = "Páginas";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.pagina_r = 101;
    ViewBag.carpeta_r = 100;

    List<WFARTHA.Entities.PROVEEDOR> lst = ViewBag.Proveedores as List<WFARTHA.Entities.PROVEEDOR>;

    //ViewBag.BORRADOR = "Mensaje de creación";
}


@*//jemo inicio 4/07/2018*@
@if (ViewBag.imgnoticia != null)
{
    if (String.IsNullOrEmpty(ViewBag.imgnoticia) == false)
    {
        <div class="parallax-container" style="height:250px;">
            <div class="@*parallax*@">
                @if (Request.Url.PathAndQuery != "/")
                {
                    <img src="@Request.Url.OriginalString.Replace(Request.Url.PathAndQuery, "")@HostingEnvironment.ApplicationVirtualPath/@ViewBag.imgnoticia" style="height: 200px; position:absolute; width:100%;" />
                }
                else
                {
                    <img src="@Request.Url.OriginalString@HostingEnvironment.ApplicationVirtualPath/@ViewBag.imgnoticia" style="height: 200px; position:absolute; width:100%;" />
                }
            </div>
        </div>

        @*<script>
                document.addEventListener('DOMContentLoaded', function () {
                    var elems = document.querySelectorAll('.parallax');
                    var instances = M.Parallax.init(elems, options);
                });
            </script>*@
    }
}

@*////jemo inicio 4/07/2018*@

@*@section noticia{
        @if (true)
        {
            <div style="width:320px;"></div>
                    <div class="parallax-container" >
                        <div class="parallax">
                            <img src="~/images/parallax.jpg" />
                        </div>
                    </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        var elems = document.querySelectorAll('.parallax');
                        var instances = M.Parallax.init(elems, []);
                    });</script>
        }
    }*@
<!--BOTONES-->
<div class="row">
    @if (ViewBag.delegados != null)
    {
        <div class="col s4">
            <label for="txt_user">Usuario</label>
            <select onchange="cambiaUsuario(this.value);" id="txt_user">
                @foreach (WFARTHA.Entities.USUARIO u in ViewBag.delegados)
                {
                    if (u.ID == ViewBag.usuariod)
                    {
                        <option selected="selected" value="@u.ID">@u.ID - @u.NOMBRE @u.APELLIDO_P @u.APELLIDO_M</option>
                    }
                    else
                    {
                        <option value="@u.ID">@u.ID - @u.NOMBRE @u.APELLIDO_P @u.APELLIDO_M</option>
                    }
                }
            </select>
        </div>
        <script>
            //var elems = document.querySelectorAll('select');
            //var instances = M.FormSelect.init(elems, []);
            function cambiaUsuario(user_id) {
                document.location.replace("/?id=" + user_id);
            }
        </script>
    }
    <div class="col s8 right-align right">
        @Html.ActionLink("Crear Solicitud", "Create", "Solicitudes", null, new { @class = "btn-small", @id = "btn_create" })
        @*@using (Html.BeginForm("Descargar", "Home", FormMethod.Post, new { @style = "display:inline;" }))
            {
                <button id="btnExport" name="excel" class="btn-small" type="submit" value="Excel"></button>
            }
            @Html.ActionLink("Enviar Negociaciones", "Edit", "Negociaciones", null, new { @class = "btn-small red", @onclick = "document.getElementById('loader').style.display = 'initial';" })*@
    </div>
    <div class="col s12 right-align" style="margin-top:5px;">

    </div>
</div>
<!--MENSAJES-->
<div>
    <style>

        /*#toast-container {*/
        /*.toast {
            padding: 10px 16px;
            font-weight: 400;
            overflow: hidden;
            font-size: 16px;
        }

            .toast:before {
                content: "\e656";
                font-size: 24px;
                color: white;
                display: inline-block;
                position: relative;
                float: left;
                margin: 0 10px 0 0;
                font-family: "Material-Design-Icons";
            }*/
        /*}*/
    </style>
    @*//B20180625 MGC 2018.06.26*@
    @if (ViewBag.BORRADOR != null)
    {
        if (ViewBag.BORRADOR != "")
        {
            <script>
        $(document).ready(function () {
            function docMessage(msg) {
                M.toast({html: '<span style="padding-right:15px;"><i class="material-icons">error</i></span>  ' + msg });
            }

            var message = '@ViewBag.BORRADOR';

            if (message != "")
            {
                // do drop down loic
                docMessage(message);
            }
        });
            </script>
        }
    }
    @if (ViewBag.NUM_DOC != null)
    {
        if (ViewBag.NUM_DOC != "")
        {
            <script>
            $(document).ready(function () {
                    function docMessage(msg) {
                        M.toast({ html: msg });
                }

                var message = '@ViewBag.NUM_DOC';

                if (message != "")
                {
                    // do drop down loic
                    docMessage('Documento ' + message+' fue creado');
                }

            });
            </script>
        }
    }

    @*///////////////////////////////L.G.P.P MODIFICACIONES INICIO*@
    @if (TempData["docs_masiva"] != null)
    {
        List<string> aa = (List<string>)TempData["docs_masiva"];
        foreach (var a in aa)
        {

            <script>
            $(document).ready(function () {
                function docMessage(msg) {
                    M.toast({ html: msg });
                }

                var messages = '@a';

                if (messages != "") {
                    if (messages.substring(0, 4) == "&lt;") {
                        docMessage('Error en registro ' + messages.replace("&lt;", ""));
                    }
                    else {
                        docMessage('Documento ' + messages + ' fue creado');
                    }
                }
            });
            </script>
        }
        TempData["docs_masiva"] = null;
    }
    @*///////////////////////////////L.G.P.P MODIFICACIONES FIN*@

    @if (Session["error"] != null)
    {
        if (Session["error"].ToString() != "")
        {
            string message = Session["error"].ToString();
            Session["error"] = null;
            <script>
                $(document).ready(function () {
                    function docMessage(msg) {
                        M.toast({ html: msg });
                    }

                    /**/
                    var message = '@message';
                /**/

                if (message != "") {
                    docMessage(message);
                }

            });
            </script>
        }
    }
</div>
<!--TABLA-->
<div class="card-panel">
    <div class="row">
        <div class="row" style="margin-bottom:0;">
            <div class="input-field col s3 m3 l3">
                <select id="selecc">
                    <option value="10" selected>10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select>
                <label id="btn_length">Ver por página</label>
            </div>
            <div class="input-field col s5 m3 l3 offset-l6 offset-m6 offset-s4">
                <input type="text" class="global_filter" id="global_filter">
                <label for="global_filter" id="lbl_search">Buscar</label>
            </div>
        </div>
        <script>
            var elem = document.querySelectorAll('select');
            var options = [];
            var instance = M.Select.init(elem, options);
        </script>
        <script src="//code.jquery.com/jquery-1.12.4.js"></script>
        <script src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
        <script src="//cdn.datatables.net/1.10.16/js/dataTables.material.min.js"></script>
        <link href="~/Content/dataTable.css" rel="stylesheet" />
        @*<link href="~/Content/dataTables.material.min.css" rel="stylesheet" />*@
        <link href="//cdn.datatables.net/1.10.16/css/dataTables.material.min.css" rel="stylesheet" />

        <table class="table mdl-data-table striped" id="table" style="width:100%;">
            <thead>
                <tr>
                    @*<th></th>*@
                    <th class="lbl_num">
                        @Html.DisplayNameFor(model => model.NUM_DOC)
                    </th>
                    @*MGC Preliminar Status que hay en preliminar*@
                    <th class="lbl_num_pre">
                        @Html.DisplayNameFor(model => model.NUM_PRE)
                    </th>
                    <th class="lblSociedad">
                        @Html.DisplayNameFor(model => model.SOCIEDAD_ID)
                    </th>
                    @*<th class="lblPais">
                            @Html.DisplayNameFor(model => model.PAIS_ID)
                        </th>*@
                    <th id="lbl_fechad">
                        @Html.DisplayNameFor(model => model.FECHAD)
                    </th>
                    <th id="lbl_horac">
                        @Html.DisplayNameFor(model => model.HORAC)
                    </th>
                    <th id="lblPC">
                        @Html.DisplayName("Periodo Contable")
                    </th>
                    <th id="lbl_estatus">
                        @Html.DisplayNameFor(model => model.ESTATUS)
                    </th>
                    <th id="lblPayId">
                        @Html.DisplayNameFor(model => model.PAYER_ID)
                    </th>
                    <th id="lblCliente">
                        @Html.DisplayName("Cliente")
                    </th>
                    <th id="lblCanal">
                        @Html.DisplayName("Canal")
                    </th>
                    <th id="lbl_tsol">
                        @Html.DisplayNameFor(model => model.TSOL)
                    </th>
                    @*<th id="lbl_tall">
                            @Html.DisplayNameFor(model => model.TALL)
                        </th>
                        <th id="lblCuentas">
                            @Html.DisplayName("Cuentas")
                        </th>*@
                    <th id="lbl_concepto">
                        @Html.DisplayNameFor(model => model.CONCEPTO)
                    </th>
                    <th id="lblMo">
                        @Html.DisplayNameFor(model => model.MONTO_DOC_ML)
                    </th>
                    @*<th id="lblFac">
                            @Html.DisplayName("Factura")
                        </th>
                        <th id="lblFack">
                            @Html.DisplayName("FacturaK")
                        </th>*@
                    <th id="lblUC">
                        @Html.DisplayNameFor(model => model.USUARIOC_ID)
                    </th>
                    <th id="lblUM">
                        @Html.DisplayName("Modificado por")
                    </th>
                    <th id="lblNC">
                        @Html.DisplayName("Número Nota Crédito/Orden de Pago")
                    </th>
                    <th id="lblRP">
                        @Html.DisplayName("Núm. Registro Provisión")
                    </th>
                    <th id="lblRnc">
                        @Html.DisplayName("Núm. Registro NC/OP")
                    </th>
                    <th id="lblRap">
                        @Html.DisplayName("Núm Registro AP")
                    </th>
                    <th id="lblRR">
                        @Html.DisplayName("Núm. Registro Reverso")
                    </th>
                    <th id="lblTDoc">
                        @Html.DisplayName("Tipo Documento")
                    </th>
                    <th id="lblPayer">
                        @Html.DisplayName("Payer")
                    </th>
                    <th id="lblCl">
                        @Html.DisplayName("Cliente")
                    </th>
                    <th id="lblIL">
                        @Html.DisplayName("$ Importe Moneda Local")
                    </th>
                    <th id="lblCCG">
                        @Html.DisplayName("Cuenta Contable Gasto")
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    @*@if (item.TSOL.PADRE)
        {
            if (item.DOCUMENTORECs.Count > 0)
            {
                <td class=" details-control" style="cursor:pointer">
                    <i class="material-icons">expand_more</i>
                </td>
            }
            else
            {
                <td class=" details-control" style="cursor:pointer">
                    <i class="material-icons">add</i>
                </td>
            }
        }
        else
        {
            if (item.DOCUMENTORECs.Count > 0)
            {
                <td class=" details-control" style="cursor:pointer">
                    <i class="material-icons">expand_more</i>
                </td>
            }
            else
            {
                <td></td>
            }
        }*@


                    @if (item.FLUJOes.Count > 0)
                    {
                        if (item.ESTATUS_WF == "R" & ViewBag.usuario.ID == item.FLUJOes.OrderByDescending(a => a.POS).FirstOrDefault().USUARIOD_ID)
                        {
                            <td onclick="document.location='@Url.Action("Edit", "Solicitudes", new { id = item.NUM_DOC })'" style="cursor:pointer">
                                @item.NUM_DOC
                            </td>
                        }
                        else
                        {
                            <td onclick="document.location='@Url.Action("Details", "Solicitudes", new { id = item.NUM_DOC })'" style="cursor:pointer">
                                @item.NUM_DOC
                            </td>
                        }
                    }
                    else
                    {
                        <td onclick="document.location='@Url.Action("Details", "Solicitudes", new { id = item.NUM_DOC })'" style="cursor:pointer">
                            @item.NUM_DOC
                        </td>
                    }

                    <td style="">
                        @item.NUM_PRE
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.SOCIEDAD_ID)
                    </td>
                    <td>
                        @if (item.FECHAD != null)
                        {
                            try
                            {@(item.FECHAD.Value.Day + "/" + item.FECHAD.Value.Month + "/" + item.FECHAD.Value.Year);
                        }
                        catch (Exception) { };
                    }
                    </td>
                    <td>
                        @item.HORAC.Value.ToString().Split('.')[0]
                    </td>
                    <td>
                        @item.FECHAC.Value.Month
                    </td>
                    @*MGC Preliminar Status que hay en preliminar*@
                    @if (item.NUM_PRE != "")
                    {

                        string estatus = "";
                        if (item.ESTATUS != null) { estatus += item.ESTATUS; } else { estatus += " "; }
                        if (item.ESTATUS_C != null) { estatus += item.ESTATUS_C; } else { estatus += " "; }
                        if (item.ESTATUS_SAP != null) { estatus += item.ESTATUS_SAP; } else { estatus += " "; }
                        if (item.ESTATUS_WF != null) { estatus += item.ESTATUS_WF; } else { estatus += " "; }

                        if (item.FLUJOes.Count > 0)
                        {
                            estatus += item.FLUJOes.OrderByDescending(a => a.POS).FirstOrDefault().WORKFP.ACCION.TIPO;
                        }
                        else
                        {
                            estatus += " ";
                        }
                        if (false) { estatus += "P"; } else { estatus += " "; }
                        if (item.FLUJOes.Where(x => x.ESTATUS == "R").ToList().Count > 0)
                        {
                            estatus += item.FLUJOes.Where(x => x.ESTATUS == "R").OrderByDescending(a => a.POS).FirstOrDefault().USUARIO.PUESTO_ID;
                        }
                        else
                        {
                            estatus += " ";
                        }
                        // "XCXXXX" ----------->CANCELADA
                        // "XXXPRX" ----------->PENDIENTE TS
                        // "XXXPAX" ----------->PENDIENTE APROBADOR
                        // "CXXAXX" ----------->PENDIENTE APROBADOR

                        @*@if (item.ESTATUS_C == "C")*@
                        if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "^.[C]"))
                        {
                            <td class="">
                                <span class="lbl_cancelled new badge red darken-1 white-text" data-badge-caption=" ">Cancelada</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "...[P][R].."))
                        {
                            <td class="">
                                <span class="lbl_ts yellow darken-2 white-text new badge" data-badge-caption=" ">Pendiente creación preliminar</span>@*//MGC 02-10-2018 Cadena de autorización*@
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "...[P][A].."))
                        {
                            <td class="">
                                <span class="new badge yellow darken-2 white-text" data-badge-caption=" "><span class="lbl_pending">Pendiente aprobador </span> @*@item.FLUJOes.OrderByDescending(a => a.POS).FirstOrDefault().USUARIOA_ID*@</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "[N]..[A]..."))
                        {
                            <td class="">
                                <span class="lbl_txt new badge green darken-1 white-text" data-badge-caption=" ">Por gen .txt</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "[C]..[A]..."))
                        {
                            <td class="">
                                <span class="lbl_txt new badge green darken-1 white-text" data-badge-caption=" ">Cerrada</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "[P]..[A]..."))
                        {
                            <td class="">
                                <span class="lbl_contab new badge green darken-1 white-text" data-badge-caption=" ">Por contabilizar</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "..[P][A]..."))
                        {
                            <td class="">
                                <span class="lbl_txt new badge green darken-1 white-text" data-badge-caption=" ">Por contabilizar</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "..[E][A]..."))
                        {
                            <td class="">
                                <span class="lbl_txt new badge red darken-1 white-text" data-badge-caption=" ">Error en contabiización</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "...[A].[P]."))
                        {
                            <td class="">
                                <span class="new badge green darken-1 white-text" data-badge-caption=" ">@item.TSOL.TSOLTs.Where(x => x.SPRAS_ID.Equals(Session["spras"].ToString())).FirstOrDefault().TXT50 <span class="lbl_approved">Abierta</span></span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "...[A]..."))
                        {
                            <td class="">
                                <span class="new badge green darken-1 white-text" data-badge-caption=" ">Registrada en SAP</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "...[R]..[8]"))
                        {
                            <td class="">
                                <span class="new badge red darken-1 white-text" data-badge-caption=" "><span class="lbl_rejecte">Pendiente corrección usuario TS </span> @*@item.FLUJOes.OrderByDescending(a => a.POS).FirstOrDefault().USUARIOD_ID*@</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "...[R]..."))
                        {
                            <td class="">
                                <span class="new badge red darken-1 white-text" data-badge-caption=" "><span class="lbl_rejected">Pendiente corrección usuario </span> @*@item.FLUJOes.OrderByDescending(a => a.POS).FirstOrDefault().USUARIOD_ID*@</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "...[S]..."))
                        {
                            <td class="">
                                <span class="lbl_soporte new badge yellow darken-2 white-text" data-badge-caption=" ">Pendiente firma</span>
                            </td>
                        }
                        else if (System.Text.RegularExpressions.Regex.IsMatch(estatus, "...[T]..."))
                        {
                            <td class="">
                                <span class="lbl_tax new badge yellow darken-2 white-text" data-badge-caption=" ">Pendiente tax</span>
                            </td>
                        }
                        else
                        {
                            if (item.DOCUMENTOPREs != null)
                            {
                                if (item.DOCUMENTOPREs.Count > 0)
                                {
                                    <td class="">
                                        @foreach (WFARTHA.Entities.DOCUMENTOPRE i in item.DOCUMENTOPREs)
                                        {
                                            if (System.Text.RegularExpressions.Regex.IsMatch(@i.MESSAGE, "...[Error]..."))
                                            {
                                                <span class="lbl_tax new badge red darken-1 white-text" data-badge-caption=" ">@i.MESSAGE</span>
                                            }
                                            else
                                            {
                                                <span class="lbl_tax new badge yellow darken-2 white-text" data-badge-caption=" ">@i.MESSAGE</span>
                                            }
                                        }
                                    </td>
                                }
                            }
                            else
                            {
                                        <td>Espacio</td>
                            }
                            
                        }

                    }
                    else
                    {
                        if (item.DOCUMENTOPREs != null)
                        {
                            if (item.DOCUMENTOPREs.Count > 0)
                            {
                                <td class="">
                                    @foreach (WFARTHA.Entities.DOCUMENTOPRE i in item.DOCUMENTOPREs)
                                    {
                                        if (System.Text.RegularExpressions.Regex.IsMatch(@i.MESSAGE, "...[Error]..."))
                                        {
                                            <span class="lbl_tax new badge red darken-1 white-text" data-badge-caption=" ">@i.MESSAGE</span>
                                        }
                                        else
                                        {
                                            <span class="lbl_tax new badge yellow darken-2 white-text" data-badge-caption=" ">@i.MESSAGE</span>
                                        }
                                    }
                                </td>
                            }
                        }
                    }


                    <td>
                        @Html.DisplayFor(modelItem => item.PAYER_ID)
                    </td>
                    <td>
                        @for (int i = 0; i < lst.Count; i++)
                        {
                            if (lst[i].LIFNR == item.PAYER_ID)
                            {
                                @Html.Label(lst[i].NAME1)
                            }
                        }
                    </td>
                    <td>
                        @for (int i = 0; i < lst.Count; i++)
                        {
                            if (lst[i].LIFNR == item.PAYER_ID)
                            {
                                @Html.Label(lst[i].STCD1)
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals("ES")).FirstOrDefault().TXT020)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.CONCEPTO)
                    </td>
                    <td class="precio">
                        @Html.DisplayFor(modelItem => item.MONTO_DOC_ML)
                    </td>
                    <td>
                        @item.USUARIOC_ID
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                }
            </tbody>
        </table>

        <iframe id="txtArea1" style="display:none"></iframe>
        <script>
    $(document).ready(function () {
        var table = $('#table').DataTable({
            //"ajax": 'ViewBag.documentos.Data[0]',
            //paging: false,
            //searching: false
            //stateSave: true,
            scrollX: "50vh",
            scrollY: "50vh",
            scrollCollapse: true,
            //language: {
            //    lengthMenu: "Display _MENU_ records per page",
            //    zeroRecords: "No se encontraron datos",
            //    info: "Página _PAGE_ de _PAGES_",
            //    infoEmpty: "No hay datos",
            //    infoFiltered: "(Filtrado de _MAX_ líneas totales)",
            //    search: "Buscar"
            //},
            order: [[4, "desc"], [5, "desc"], [1, "desc"]],
            language: {
                //"url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                "url": "../Scripts/lang/@Session["spras"].ToString()"+".json"
            },
            columnDefs: [
                {
                    targets: [2, 3, 4, 5, 7, 9],
                    className: 'mdl-data-table__cell--non-numeric'
                }
            ],
            initComplete: function () {
                this.api().columns().every(function () {
                    var column = this;
                    //var div = $('<div class="inputa-field col s12">').appendTo($(column.footer()).empty());
                    var select = $('<select style="display:initial;" class="browser-default"><option value=""></option></select>')
                        //var select = $('<select ><option value=""></option></select>')
                        //.appendTo($(div))
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            )
                                ;

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    //column.data().unique().sort().each(function (d, j) {
                    column.cells('', column[0]).render('display').sort().unique().each(function (d, j) {
                        //select.append('<option value="' + d + '">' + d + '</option>')
                        var val = $('<div/>').html(d).text();
                        select.append('<option value="' + val + '">' + val + '</option>');
                    });
                    //var scr = div.append('<script>var elem = document.querySelectorAll("select");var instance = M.Select.init(elem, []);');
                });
            }
        });

        var a = $('#selecc').val();
        table.page.len(a).draw();
        $('#selecc').on('change', function () {
            table.page.len(this.value).draw();
        });

        $('input.global_filter').on('keyup click', function () {
            filterGlobal();
        });

        $('#table tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                var child = format(row.data(), row, tr);
                if (child != undefined) {
                }
            }
        });

    });

    function filterGlobal() {
        $('#table').DataTable().search(
            $('#global_filter').val()).draw();
    }
    function format(d, row, tr) {
        $.ajax({
            url: "../../Listas/Relacionados",
            type: "GET",
            async: false,
            timeout: 30000,
            dataType: "json",
            data: { num_doc: d[1], spras:'@Session["spras"].ToString()' },
            success: function (data) {
                var uu = ($.map(data, function (item) {
                    return { label: item.NUM_DOC, value: item };
                }))
                var ret = "<table class='table mdl-data-table striped'>";
                for (var i = 0; i < uu.length; i++) {
                    var sum = 0;
                    ret += "<tr onclick='link(" + uu[i].value.NUM_DOC+")' style='cursor:pointer'><td>" + uu[i].value.NUM_DOC + "</td><td>" + uu[i].value.TXT020 + "</td>";
                    ret += "<td>" + uu[i].value.TXT500 + "</td>";
                    ret += "<td>" + uu[i].value.FECHAD + "</td>";
                    ret += "<td>" + uu[i].value.HORAC.split('.')[0] + "</td>";
                    if (uu[i].value.ESTATUS_WF == "R") {
                        uu[i].value.ESTATUS = "red"
                        uu[i].value.ESTATUS_WF = "@foreach (WFARTHA.Entities.TEXTO t in ViewBag.textos){if(t.CAMPO_ID == "lbl_rejected"){<span>@t.TEXTOS</span>}}";
                    } else if (uu[i].value.ESTATUS_WF == "P") {
                        uu[i].value.ESTATUS = "yellow darken-2"
                    uu[i].value.ESTATUS_WF = "@foreach (WFARTHA.Entities.TEXTO t in ViewBag.textos){if(t.CAMPO_ID == "lbl_pending"){<span>@t.TEXTOS</span>}}";
                    } else if (uu[i].value.ESTATUS_WF == "A") {
                        uu[i].value.ESTATUS = "green"
                    uu[i].value.ESTATUS_WF = "@foreach (WFARTHA.Entities.TEXTO t in ViewBag.textos){if(t.CAMPO_ID == "lbl_approved"){<span>@t.TEXTOS</span>}}";
                    }
                    ret += "<td class='" + uu[i].value.ESTATUS + " white-text'>" + uu[i].value.ESTATUS_WF+"</td>";
                    ret += "<td>" + uu[i].value.CONCEPTO + "</td>";
                    ret += "<td>" + uu[i].value.MONTO_DOC_ML + "</td>";
                    for (var aa = 0; aa < uu.length; aa++) {
                        sum = sum + uu[aa].value.MONTO_DOC_ML;
                    }
                    ret += "<td>" + sum.toFixed(2) + "</td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "<td></td>";
                    ret += "</tr>";
                }
                ret += "</table>"

                row.child(ret).show();
                tr.addClass('shown');

                return ret;
            },
            error: function (e, ew) {
                alert(e);
            }
        });
    }
    function link(num) {
        document.location = "../Solicitudes/Details/" + num;
    }
        </script>
        <style>

            .dataTables_length {
                display: none;
            }

            .dataTables_filter {
                display: none;
            }

            .dataTables_scrollHeadInner, .mdl-data-table {
                width: 100%;
            }
        </style>
    </div>
</div>